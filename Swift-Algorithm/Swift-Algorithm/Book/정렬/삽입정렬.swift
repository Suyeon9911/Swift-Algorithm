//
//  삽입정렬.swift
//  Swift-Algorithm
//
//  Created by 김수연 on 2022/10/06.
//

import Foundation

/*
 삽입 정렬 : 선택 정렬에 비해 실행 시간 측면에서 더 효율적인 알고리즘
 데이터를 하나씩 확인하며 각 데이터를 적절한 위치에 삽입

 삽입 정렬은 필요할 떄만 위치를 바꾸므로 데이터가 거의 정렬되어 있을 때 훨씬 효율적이다.
 삽입 정렬은 두 번째 데이터 부터 시작. 첫 번째 데이터는 그 자체로 정렬되어 있다고 판단

 정렬이 이루어진 원소는 항상 오름차순을 유지하고 있다.
 왼쪽으로 한칸씩 이동하다가 자기보다 작은 데이터를 만나면 더 이상 왼쪽으로 이동할 필요가 없다.
 왼쪽은 이미 정렬되어있는 상태이기 때문 !
 */

func 삽입정렬() {

    var array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

    for i in 1..<array.count {
        for j in stride(from: i, to: 0, by: -1) {
            // i 부터 1씩 감소하며 반복함
            if array[j] < array[j-1] {
                // 현재 index가 왼쪽의 값보다 작다면, 왼쪽으로 한칸씩 이동
                array.swapAt(j, j-1) // swap
            } else {
                // 자기보다 작은 데이터를 만나면 멈춘다
                break
            }
        }
    }
}

// 시간복잡도는 O(N^2) 최선의 경우 O(N)  : 거의 정렬이 되어 있는 상태로 입력이 주어지는 문제라면 삽입정렬을 이용하는 것이
// 가장 좋다.


